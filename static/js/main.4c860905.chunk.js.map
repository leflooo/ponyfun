{"version":3,"sources":["PonyDetails.js","PonyList.js","index.js"],"names":["PonyDetails","props","state","currentContact","errors","name","note","nextProps","this","setState","e","target","value","preventDefault","newContact","window","confirm","deleteContact","close","fields","formIsValid","length","handleValidation","addOrUpdateContact","onClose","isOpen","className","uid","onClick","icon","faTimes","color","transform","onSubmit","htmlFor","type","id","onChange","handleInputChange","style","position","defaultChecked","outorin","status","href","faTrashAlt","faCheckCircle","React","Component","PonyList","sm","emptyContact","img","contacts","isModalOpen","filter","sortby","getContacts","clearTimeout","intervalID","c","a","b","localeCompare","x","console","log","classList","contains","remove","array","index","indexOf","splice","add","concat","fetch","config","Url","method","headers","then","response","json","Json","Items","setTimeout","bind","updatedContact","body","JSON","stringify","contact","faPlusCircle","data-param","changeSort","faSort","includes","toString","sort","sortinga","map","selectContact","faEdit","closeModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c860905.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass PonyDetails extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        props: props.currentContact,\r\n        errors: {\r\n          name: \"\",\r\n          note: \"\"\r\n        }\r\n      }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n      this.setState(nextProps.currentContact);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n      return true;\r\n    }\r\n\r\n    \r\n    handleInputChange(e) {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n    \r\n    newContact(e) {\r\n      e.preventDefault();\r\n      this.props.newContact();\r\n    }\r\n    \r\n    deleteContact(e) {\r\n      e.preventDefault();\r\n      if(window.confirm(this.props.currentContact.name +\" wirklich löschen?\")){\r\n        this.props.deleteContact(this.props.currentContact);\r\n        this.close(e);\r\n      }\r\n    }\r\n\r\n\r\n    handleValidation(){\r\n      let fields = this.state;\r\n      let errors = {};\r\n      let formIsValid = true;\r\n\r\n      //Name\r\n      if(!fields[\"name\"]){\r\n         formIsValid = false;\r\n         errors[\"name\"] = \"Bitte ausfüllen!\";\r\n      }\r\n\r\n \r\n      //Email\r\n      if(fields[\"note\"].length > 39){\r\n         formIsValid = false;\r\n         errors[\"note\"] = \"zu viele Zeichen!\";\r\n      }\r\n\r\n\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    \r\n    addOrUpdateContact(e) {\r\n      e.preventDefault();\r\n      if(this.handleValidation()){\r\n        this.props.addOrUpdateContact(this.state);\r\n        this.close(e);\r\n      }\r\n    }\r\n\r\n    close(e) {\r\n      e.preventDefault()\r\n\r\n      if (this.props.onClose) {\r\n        this.props.onClose()\r\n      }\r\n    }\r\n    \r\n    render() {\r\n      if (this.props.isOpen === false)\r\n        return null\r\n\r\n\r\n      return (<div>\r\n      <div className=\"detail\">\r\n        \r\n\r\n        <div className=\"header\">\r\n          <h4>{this.props.currentContact.uid ? 'Pferdedaten' : 'Neues Pferd anlegen'}</h4>\r\n          \r\n          <FontAwesomeIcon onClick={(e) => this.close(e)} className=\"close\" icon={ faTimes } color=\"grey\" transform=\"grow-6\"/>\r\n          \r\n        </div>\r\n\r\n        <form onSubmit={(e) => this.addOrUpdateContact(e)}>\r\n        \r\n          <div className=\"task-input\">\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input \r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={this.state.name} \r\n              //disabled = {this.state.id}\r\n              onChange={(e) => this.handleInputChange(e)}\r\n              //ref={input => input && input.value === \"\" && input.focus()}\r\n            />\r\n            <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\r\n          </div>         \r\n\r\n          <div className=\"select-wrapper\">\r\n            <label htmlFor=\"position\">Box Standort:</label>\r\n\r\n            <select id=\"position\" name=\"position\" value={this.state.position} onChange={(e) => this.handleInputChange(e)}>\r\n              <option value=\"EG\">EG</option>\r\n              <option value=\"1.Stock\">1.Stock</option>\r\n              <option value=\"Lisa Stall\">Lisa Stall</option>\r\n            </select>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <div className=\"picker\">\r\n            <fieldset>\r\n              <legend>Raus?</legend>\r\n\r\n                <label>Ja:</label>\r\n                <input className=\"task-status\" name=\"outorin\" type=\"radio\" value=\"1\" defaultChecked={this.state.outorin === \"1\"} onChange={(e) => this.handleInputChange(e)}></input>\r\n                <label>Nein:</label>\r\n                <input className=\"task-status\" name=\"outorin\" type=\"radio\" value=\"2\" defaultChecked={this.state.outorin === \"2\"} onChange={(e) => this.handleInputChange(e)}></input>\r\n                <label>Egal:</label>\r\n                <input className=\"task-status\" name=\"outorin\" type=\"radio\" value=\"0\" defaultChecked={this.state.outorin === \"0\"} onChange={(e) => this.handleInputChange(e)}></input>\r\n            </fieldset>            \r\n          </div>\r\n          \r\n\r\n          <div className=\"task-input\">\r\n            <label htmlFor=\"note\">Notiz:</label>\r\n            <input \r\n              type=\"text\"\r\n              id=\"note\"\r\n              name=\"note\"\r\n              value={this.state.note} \r\n              onChange={(e) => this.handleInputChange(e)} \r\n            />\r\n            <span style={{color: \"red\"}}>{this.state.errors[\"note\"]}</span>\r\n          </div>\r\n          <div className=\"task-count\">\r\n            <label htmlFor=\"status\">{this.state.status}</label>            \r\n          </div>\r\n\r\n          <br/>\r\n          <div className=\"action picker\">\r\n            { this.props.currentContact.uid &&\r\n              <button href=\"#\" \r\n                className=\"btn delete\" \r\n                onClick={(e) => this.deleteContact(e)}\r\n              >\r\n                <FontAwesomeIcon icon={ faTrashAlt } transform=\"grow-4\"/>\r\n          \r\n                &nbsp;Löschen\r\n                \r\n                </button>\r\n            }\r\n            <button type=\"submit\" className=\"btn right save\">\r\n            <FontAwesomeIcon icon={ faCheckCircle } transform=\"grow-4\"/>\r\n            &nbsp;Speichern\r\n              </button>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n      <div className=\"bg\" onClick={e => this.close(e)}/>\r\n      </div>\r\n          )\r\n    }\r\n  }\r\n\r\n  export default PonyDetails;","import React from 'react';\nimport './App.scss';\nimport PonyDetails from './PonyDetails';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faPlusCircle, faSort } from '@fortawesome/free-solid-svg-icons'\n\n\nclass PonyList extends React.Component {\n  intervalID;\n  constructor(props) {\n    super(props);\n    this.emptyContact = {\n      uid: '',\n      name: '',\n      position: '',\n      outorin: 0,\n      status: '',\n      note: '',\n      img: ''\n\n    };\n    this.state = {\n      contacts: [],\n      currentContact: this.emptyContact,\n      isModalOpen: false,\n      filter: [\"0\", \"1\", \"2\"],\n      sortby: \"outorin\",\n    }\n  }\n\n  componentDidMount() {\n    this.getContacts();\n  }\n\n  componentWillUnmount() {\n    \n    clearTimeout(this.intervalID);\n  }\n\n  selectContact(uid) {   \n    \n    this.setState({\n      currentContact: this.state.contacts.filter(c => c.uid === uid)[0],\n      isModalOpen: true\n    });\n\n  }\n\n  openModal() {\n    clearTimeout(this.intervalID);\n    this.setState({ isModalOpen: true })\n  }\n\n  closeModal() {\n    this.setState({ isModalOpen: false })\n    this.getContacts();\n  }\n\n  newContact() {\n    this.setState({\n      currentContact: this.emptyContact,\n      isModalOpen: true\n    });\n    \n  }\n  \n  sm = 1; //sortMultiplyer\n\n  sortinga(a , b){    \n    if(this.state.sortby === \"outorin\"){\n      if(a.outorin > b.outorin)\n      return 1 * this.sm;\n      else\n      return -1 * this.sm;\n    }\n    if(this.state.sortby === \"position\"){\n      if(a.position.localeCompare(b.position) < 1)\n      return 1 *this.sm;\n      else\n      return -1 * this.sm;\n    }\n  }\n\n  changeSort(e, x){\n    if(this.state.sortby === x){\n      this.sm = this.sm * -1;\n    }    \n      this.setState({        \n        sortby: x\n      }); \n  }\n\n\n  filter(e) {\n    console.log(e.target.value);\n    if(e.target.classList.contains('is-active')){\n      e.target.classList.remove('is-active');\n        var array = this.state.filter;\n        var index = array.indexOf(e.target.value);\n        if(index !== -1){\n          array.splice(index, 1);\n          this.setState({\n            filter : array\n          });\n        }\n    }else{\n      e.target.classList.add('is-active');\n      this.setState({\n        filter : this.state.filter.concat(e.target.value)\n      });\n    }\n  }\n\n\n\n  async getContacts() {    \n\n    if(!this.state.isModalOpen){\n      let Json = await fetch(this.props.config.Url, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }).then(response => response.json());\n      console.log(Json.Items);\n      this.setState({\n        //currentContact: this.emptyContact,\n        contacts: Json.Items,\n      });\n    }\n    this.intervalID = setTimeout(this.getContacts.bind(this), 10000);\n      \n          \n  }\n\n  async addOrUpdateContact(updatedContact) {\n    let method;\n    if (updatedContact.uid === '') {\n      method = 'POST';\n    } else {\n      method = 'PUT';\n    }\n    await fetch(this.props.config.Url, {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedContact)\n    });\n    this.getContacts();\n  }\n\n  async deleteContact(contact) {\n    await fetch(this.props.config.Url, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(contact)\n    });\n    this.getContacts();\n  }\n\n  render() {\n\n    return <div>\n    <div className=\"app\">\n\n          <div className=\"header\">\n            <h1 className=\"task-header-title\">Koppelspaß </h1> \n            <FontAwesomeIcon onClick={(e) => this.newContact(e)} className=\"add\" icon={ faPlusCircle } color=\"MediumAquaMarine\" transform=\"grow-15\"/>\n          </div>\n            <div className=\"task-tools\">\n              \n              <div>\n                \n                <button className=\"task-filter is-active\" data-param=\"outorin\" value=\"1\" onClick={(e) => this.filter(e)}>\n                  Raus ({this.state.contacts.filter(c => c.outorin === \"1\").length})\n                </button>\n                <button className=\"task-filter is-active\" data-param=\"outorin\" value=\"2\" onClick={(e) => this.filter(e)}>\n                  Nicht raus ({this.state.contacts.filter(c => c.outorin === \"2\").length})\n                </button>\n                <button className=\"task-filter is-active\" value=\"0\" onClick={(e) => this.filter(e)}>\n                  Egal ({this.state.contacts.filter(c => c.outorin !== \"1\" && c.outorin !== \"2\").length})\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"sort-wrapper\">\n              <div className=\"task-sorter left\" onClick={(e) => this.changeSort(e, \"outorin\")}>\n                \n                  <p className=\"task-sort\">\n                      <FontAwesomeIcon icon={ faSort } transform=\"grow-5\" \n                      />\n                  </p>\n                \n              </div>\n              <div className=\"task-sorter right\" onClick={(e) => this.changeSort(e, \"position\")}>\n                  <p className=\"task-sort\">\n                      <FontAwesomeIcon icon={ faSort } transform=\"grow-5\" \n                      />\n                  </p>\n              </div>\n            </div>\n\n          <div className=\"task-list\">            \n          \n              {this.state.contacts.filter(c =>  this.state.filter.includes(c.outorin.toString()))\n              .sort((a , b) => this.sortinga(a , b))\n              .map(contact =>\n                <div className={contact.outorin === \"1\" ? \"task-item wantsout\" : contact.outorin === \"2\" ? \"task-item wantsnotout\" : \"task-item\"} key={contact.uid}>\n                  <label className={contact.outorin === \"1\" ? \"pony-wantout\" : contact.outorin === \"2\" ? \"pony-wantnotout\" : \"pony-dontcare\"}></label>\n                  <div>\n                  \n                    <div>\n                      <label\n                        className=\"task-name\">\n                        <span>{contact.name}</span>\n                      </label>\n                    </div>\n                    <div className=\"status\">\n                    <label >\n                      <span>{contact.note}&emsp;</span>\n                    </label>\n                    </div>    \n                                   \n                  </div>\n                  <div className=\"right\">\n                    <div>\n                      <label >\n                        <span>{contact.position}</span> \n                      </label>\n                      \n                    </div>   \n                    <div>\n                    <label  onClick={() => this.selectContact(contact.uid)}>\n                        <span className=\"edit\">\n                          <FontAwesomeIcon icon={faEdit} transform=\"shrink-3\"/>\n                        </span> \n                    </label> \n                    </div>\n                  </div>\n                </div>\n                    \n              )}\n          </div>\n          </div>\n          <PonyDetails\n            isOpen={this.state.isModalOpen} \n            onClose={() => this.closeModal()}\n            currentContact={this.state.currentContact}\n            newContact={() => this.newContact()}\n            addOrUpdateContact={(contact) => this.addOrUpdateContact(contact)}\n            deleteContact={(contact) => this.deleteContact(contact)} />\n        \n      </div>\n  }\n}\n\nexport default PonyList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport PonyList from './PonyList';\n\nconst conf = {\n    Url: 'https://ju6w4ca8tc.execute-api.eu-central-1.amazonaws.com/default/myHorseFun'\n  };\n\nReactDOM.render(<PonyList config={conf} />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}